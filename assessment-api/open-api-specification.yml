openapi: '3.0.0'
info:
  title: 'laa-ccms-caab-assessment-api'
  version: '1.0.0'
paths:
  /assessments:
    get:
      tags:
        - assessments
      summary: 'get assessments'
      operationId: 'getAssessments'
      parameters:
        - $ref: '#/components/parameters/assessmentType'
        - $ref: '#/components/parameters/providerId'
        - $ref: '#/components/parameters/caseReferenceNumber'
        - $ref: '#/components/parameters/status'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assessmentDetails"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    delete:
      tags:
        - assessments
      summary: 'delete assessments'
      operationId: 'deleteAssessments'
      parameters:
        - $ref: '#/components/parameters/requiredUserLoginId'
        - $ref: '#/components/parameters/assessmentType'
        - name: 'provider-id'
          required: true
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - name: 'case-reference-number'
          required: true
          in: 'query'
          schema:
            type: 'string'
            example: '1234567890'
        - $ref: '#/components/parameters/status'
      responses:
        '204':
          description: 'Successful deletion'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    post:
      tags:
        - assessments
      summary: 'create an assessment'
      operationId: 'createAssessment'
      parameters:
        - $ref: '#/components/parameters/requiredUserLoginId'
      requestBody:
        description: create an assessment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assessmentDetail'
      responses:
        '201':
          description: 'Successful create'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal server error'
  /assessments/{assessment-id}:
    get:
      tags:
        - assessments
      summary: 'get assessment by id '
      operationId: 'getAssessment'
      parameters:
        - $ref: '#/components/parameters/assessmentId'
      responses:
        '200':
          description: 'Successful operation'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assessmentDetail"
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
    put:
      tags:
        - assessments
      summary: 'update an existing assessment'
      operationId: 'updateAssessment'
      parameters:
        - $ref: '#/components/parameters/assessmentId'
        - $ref: '#/components/parameters/requiredUserLoginId'
      requestBody:
        description: update an existing assessment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/assessmentDetail'
      responses:
        '204':
          description: 'Successful update'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '500':
          description: 'Internal server error'
    patch:
      tags:
        - assessments
      summary: 'patch assessment'
      operationId: 'patchAssessment'
      requestBody:
        description: patch an assessment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/patchAssessmentDetail'
      parameters:
        - $ref: '#/components/parameters/assessmentId'
        - $ref: '#/components/parameters/requiredUserLoginId'
      responses:
        '204':
          description: 'Successful operation'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'
  /assessments/{assessment-id}/checkpoint:
    delete:
      tags:
        - assessments
      summary: 'delete checkpoint from assessment'
      operationId: 'deleteAssessmentCheckpoint'
      parameters:
        - $ref: '#/components/parameters/assessmentId'
        - $ref: '#/components/parameters/requiredUserLoginId'
      responses:
        '204':
          description: 'Successful deletion'
        '400':
          description: 'Bad request'
        '401':
          description: 'Unauthorized'
        '403':
          description: 'Forbidden'
        '404':
          description: 'Not found'
        '500':
          description: 'Internal server error'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  parameters:
    assessmentType:
      name: name
      in: query
      schema:
        type: 'array'
        items:
          type: 'string'
          enum:
            - 'billingAssessment'
            - 'billingAssessment_PREPOP'
            - 'poaAssessment'
            - 'poaAssessment_PREPOP'
            - 'meansAssessment'
            - 'meansAssessment_PREPOP'
            - 'meritsAssessment'
            - 'meritsAssessment_PREPOP'
    assessmentId:
        name: 'assessment-id'
        in: 'path'
        required: true
        schema:
          type: 'integer'
          format: 'int64'
          example: '1234567890'
    requiredUserLoginId:
        name: 'Caab-User-Login-Id'
        in: header
        required: true
        schema:
          type: 'string'
          example: 'SOMEUSER@COMPANY.CO.UK'
    providerId:
        name: 'provider-id'
        in: 'query'
        schema:
          type: 'string'
          example: '1234567890'
    caseReferenceNumber:
        name: 'case-reference-number'
        in: 'query'
        schema:
          type: 'string'
          example: '1234567890'
    status:
        name: 'status'
        in: 'query'
        schema:
          type: 'string'
          example: 'INCOMPLETE'

  schemas:
    assessmentDetails:
      type: 'object'
      properties:
        content:
          type: 'array'
          default: [ ]
          items:
            $ref: "#/components/schemas/assessmentDetail"
    assessmentDetail:
        type: 'object'
        properties:
          id:
            type: 'integer'
            format: 'int64'
          provider_id:
            type: 'string'
          case_reference_number:
            type: 'string'
          name:
            type: 'string'
          status:
            type: 'string'
          entity_types:
            type: array
            default: [ ]
            items:
              $ref: '#/components/schemas/assessmentEntityTypeDetail'
          checkpoint:
            $ref: '#/components/schemas/assessmentCheckpointDetail'
          audit_detail:
            $ref: '#/components/schemas/auditDetail'
    patchAssessmentDetail:
      type: 'object'
      properties:
        provider_id:
          type: 'string'
        case_reference_number:
          type: 'string'
        name:
          type: 'string'
        status:
          type: 'string'
    auditDetail:
      type: 'object'
      properties:
        created:
          type: 'string'
          format: 'date'
        created_by:
          type: 'string'
        last_saved:
          type: 'string'
          format: 'date'
        last_saved_by:
          type: 'string'
    assessmentCheckpointDetail:
      type: 'object'
      properties:
        username:
          type: 'string'
        interviewData:
          type: 'string'
    assessmentEntityTypeDetail:
      type: object
      properties:
        id:
          type: 'integer'
          format: 'int64'
        name:
          type: string
        entities:
          type: array
          items:
            $ref: '#/components/schemas/assessmentEntityDetail'
      required:
        - entityType
        - entities
    assessmentEntityDetail:
      type: object
      properties:
        id:
          type: 'integer'
          format: 'int64'
        name:
          type: string
        attributes:
          type: array
          default: [ ]
          items:
            $ref: '#/components/schemas/assessmentAttributeDetail'
        relations:
          type: array
          default: [ ]
          items:
            $ref: '#/components/schemas/assessmentRelationshipDetail'
        prepopulated:
          type: boolean
        completed:
          type: boolean
      required:
        - entityId
        - prepopulated
    assessmentAttributeDetail:
      type: object
      properties:
        id:
          type: 'integer'
          format: 'int64'
        name:
          type: string
        type:
          type: string
        value:
          type: string
        prepopulated:
          type: boolean
        asked:
          type: boolean
      required:
        - attributeId
    assessmentRelationshipDetail:
      type: object
      properties:
        id:
          type: 'integer'
          format: 'int64'
        name:
          type: string
        prepopulated:
          type: boolean
        relationship_targets:
          type: array
          default: [ ]
          items:
            $ref: '#/components/schemas/assessmentRelationshipTargetDetail'
    assessmentRelationshipTargetDetail:
      type: object
      properties:
        id:
          type: 'integer'
          format: 'int64'
        target_entity_id:
          type: string
security:
  - ApiKeyAuth: []
